{"version":3,"sources":["routes/Contact/Contact.js"],"names":["useStyles","makeStyles","root","position","circleBig","top","left","zIndex","height","width","backgroundColor","opacity","borderRadius","display","circleSmall","wrapper","padding","gridContainer","gridItem","messageWrapper","flexDirection","justifyContent","paddingTop","textAlign","messageHeader","fontFamily","fontSize","messageDescription","color","inputContainer","inputWrapper","margin","inputName","inputEmail","inputCompany","inputMessage","inputBtnWrapper","marginTop","alignItems","inputBtn","textTransform","Contact","useState","successOpen","setSuccessOpen","errorOpen","setErrorOpen","classes","useEffect","window","scrollTo","handleClose","reason","className","container","justify","item","xs","sm","md","variant","onSubmit","e","preventDefault","emailjs","sendForm","target","then","result","console","log","text","error","reset","required","id","label","name","multiline","rowsMax","type","endIcon","style","marginLeft","open","autoHideDuration","onClose","severity"],"mappings":"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","file":"static/js/6.17a501f6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Typography, Grid, Button, TextField, Snackbar } from '@material-ui/core'\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nimport emailjs from 'emailjs-com'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relattive',\r\n    },\r\n    circleBig: {\r\n        position: 'absolute',\r\n        top: '28%',\r\n        left: '-10%',\r\n        zIndex: '-3',\r\n        height: '700px',\r\n        width: '700px',\r\n        backgroundColor: '#7619FF',\r\n        opacity: '.2',\r\n        borderRadius: '50%',\r\n\r\n        '@media (max-width: 600px)': {\r\n            display: 'none',\r\n        },\r\n\r\n        '@media(min-width: 601px) and (max-width: 1024px)': {\r\n            height: '400px',\r\n            width: '400px',\r\n            top: '34%',\r\n        },\r\n    },\r\n    circleSmall: {\r\n        position: 'absolute',\r\n        top: '25%',\r\n        left: '40%',\r\n        zIndex: '-2',\r\n        height: '100px',\r\n        width: '100px',\r\n        backgroundColor: '#7619FF',\r\n        opacity: '.3',\r\n        borderRadius: '50%',\r\n\r\n        '@media (max-width: 600px)': {\r\n            display: 'none',\r\n        },\r\n\r\n        '@media(min-width: 601px) and (max-width: 1024px)': {\r\n            height: '100px',\r\n            width: '100px',\r\n            top: '30%',\r\n        },\r\n    },\r\n    wrapper: {\r\n        padding: '10em 0',\r\n\r\n        '@media (max-width: 600px)': {\r\n            padding: '6em 0'\r\n        },\r\n    },\r\n    gridContainer: {\r\n\r\n    },\r\n    gridItem: {\r\n\r\n    },\r\n    messageWrapper: {\r\n\r\n        '@media (min-width: 1200px)': {\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'start',\r\n            paddingTop: '1em',\r\n\r\n        },\r\n\r\n        '@media (max-width: 600px)': {\r\n            textAlign: \"center\",\r\n            padding: '1em 2em'\r\n        },\r\n    },\r\n    messageHeader: {\r\n        fontFamily: 'Nunito-Bold',\r\n        '@media (max-width: 600px)': {\r\n            fontSize: '2em'\r\n        },\r\n    },\r\n    messageDescription: {\r\n        color: '#848480 ',\r\n        paddingTop: '1em',\r\n\r\n        '@media (max-width: 600px)': {\r\n            paddingTop: '1em'\r\n        },\r\n    },\r\n    inputContainer: {\r\n\r\n        '@media (max-width: 600px)': {\r\n            padding: '1em 2em',\r\n        },\r\n    },\r\n    inputWrapper: {\r\n        margin: '1em 0',\r\n\r\n    },\r\n    inputName: {\r\n        width: '100%'\r\n    },\r\n    inputEmail: {\r\n        width: '100%'\r\n    },\r\n    inputCompany: {\r\n        width: '100%'\r\n    },\r\n    inputMessage: {\r\n        width: '100%'\r\n    },\r\n    inputBtnWrapper: {\r\n        marginTop: '3em',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    inputBtn: {\r\n        fontFamily: 'Oxy-Reg',\r\n        width: '100%',\r\n        backgroundColor: '#7619FF',\r\n        color: '#fcfcfc',\r\n        fontSize: '1.05rem',\r\n        padding: '.6rem 0',\r\n        textTransform: 'none',\r\n    },\r\n});\r\n\r\nexport default function Contact() {\r\n\r\n    const [successOpen, setSuccessOpen] = useState(false);\r\n    const [errorOpen, setErrorOpen] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n\r\n\r\n    const sendEmail = (e) => {\r\n        e.preventDefault(e);\r\n\r\n        emailjs.sendForm('service_gmw78vk', 'template_8726hwb', e.target, 'user_8aetlhmZHWhMHlxBHbDlJ')\r\n            .then((result) => {\r\n                setSuccessOpen(true);\r\n                console.log(result.text);\r\n            },\r\n                (error) => {\r\n                    setErrorOpen(true);\r\n                    console.log(error.text);\r\n                });\r\n        e.target.reset();\r\n    };\r\n\r\n\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setSuccessOpen(false);\r\n        setErrorOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <div className={classes.circleBig}></div>\r\n            <div className={classes.circleSmall}></div>\r\n\r\n            <div className={classes.wrapper}>\r\n                <Grid\r\n                    container\r\n                    justify='space-around'\r\n                >\r\n                    <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={5}\r\n                        md={5}\r\n                        className={classes.gridItem}\r\n                    >\r\n                        <div className={classes.messageWrapper}>\r\n                            <Typography variant='h4' className={classes.messageHeader} >\r\n                                Hi there, feel free to contact me!\r\n                            </Typography>\r\n                            <Typography variant='body1' className={classes.messageDescription} >\r\n                                I'm here to help and answer any question you might have.\r\n                                I'm looking forward to hear from you.\r\n                            </Typography>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={4}\r\n                        md={4}\r\n                    >\r\n                        <form onSubmit={sendEmail}>\r\n                            <div className={classes.inputContainer}>\r\n\r\n                                <div className={classes.inputWrapper}>\r\n                                    <TextField required className={classes.inputName} id='personName' label='Name' variant='outlined' name='name' />\r\n                                </div>\r\n                                <div className={classes.inputWrapper}>\r\n                                    <TextField required className={classes.inputEmail} id='personEmail' label='Email' variant='outlined' name='email' />\r\n                                </div>\r\n                                <div className={classes.inputWrapper}>\r\n                                    <TextField required className={classes.inputCompany} id='Subject' label='Subject' variant='outlined' name='subject' />\r\n                                </div>\r\n                                <div className={classes.inputWrapper}>\r\n                                    <TextField required className={classes.inputMessage} id='personMessage' label='Message' multiline rowsMax={3} variant='outlined' name='message' />\r\n                                </div>\r\n                                <div className={classes.inputBtnWrapper}>\r\n                                    <Button\r\n                                        variant='contained'\r\n                                        className={classes.inputBtn}\r\n                                        type='submit'\r\n                                        endIcon={<SendIcon style={{ fontSize: '1.4rem', marginLeft: '.5rem', }} />}\r\n                                    >\r\n                                        Submit\r\n                                    </Button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </form>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n\r\n            </div>\r\n\r\n            <Snackbar open={successOpen} autoHideDuration={8000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\" variant='filled'>\r\n                    <AlertTitle>Success!</AlertTitle>\r\n                    Message has  been sent.\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <Snackbar open={errorOpen} autoHideDuration={8000} onClose={handleClose}>\r\n                <Alert severity=\"error\" onClose={handleClose} variant=\"filled\">\r\n                    <AlertTitle>Failed!</AlertTitle>\r\n                    Please try again.\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}