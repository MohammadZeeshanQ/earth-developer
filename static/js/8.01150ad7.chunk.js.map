{"version":3,"sources":["assets/images/projects/covidWeb.png","assets/images/projects/todoList.png","assets/images/projects/weatherWeb.png","middleware/ProjectData.js","assets/images/projects/pokemonApp.png","routes/Project/WebAppProject.js"],"names":["gridData","covidWeb","weatherWeb","todoList","useStyles","makeStyles","root","wrapper","width","margin","headerContainer","paddingTop","textAlign","header","fontFamily","fontSize","letterSpacing","gridContainer","padding","gridItem","border","boxShadow","borderRadius","transform","transition","gridImageContainer","gridImage","height","objectFit","borderBottom","gridTextContainer","title","color","description","chipTitle","background","dialogImage","dialogButton","backgroundColor","textTransform","dialogTitle","display","flexGrow","alignItems","Project","classes","useState","dialog","setDialog","pictureIndex","setPictureIndex","dialogLink","setDialongLink","name","setName","toggleDialog","useEffect","window","scrollTo","console","log","className","Typography","variant","Grid","container","justify","map","index","image","link","program","item","xs","sm","md","onClick","dialogData","src","alt","programs","i","Chip","label","code","Dialog","maxWidth","fullWidth","open","onClose","DialogTitle","style","IconButton","size","DialogContent","DialogActions","Button","href"],"mappings":"sRAAe,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,uCCK5BA,EAAW,CACpB,CACI,MAAS,eACT,MAASC,EACT,KAAQ,oCACR,YAAe,2DACf,QAAW,CACP,CAAE,KAAQ,YACV,CAAE,KAAQ,iBAGlB,CACI,MAAS,kBACT,MClBO,IAA0B,uCDmBjC,KAAQ,0CACR,YAAe,kEACf,QAAW,CACP,CAAE,KAAQ,YACV,CAAE,KAAQ,iBAGlB,CACI,MAAS,cACT,MAASC,EACT,KAAQ,yCACR,YAAe,mDACf,QAAW,CACP,CAAE,KAAQ,YACV,CAAE,KAAQ,eACV,CAAE,KAAQ,SAGlB,CACI,MAAS,gBACT,MAASC,EACT,KAAQ,0CACR,YAAe,qEACf,QAAW,CACP,CAAE,KAAQ,YACV,CAAE,KAAQ,U,wBErChBC,EAAYC,YAAW,CACzBC,KAAM,GAINC,QAAS,CACLC,MAAO,MACPC,OAAQ,OAER,2BAA4B,CACxBD,MAAO,OAEX,mDAAoD,CAChDA,MAAO,QAIfE,gBAAiB,CACbC,WAAY,OACZC,UAAW,UAGfC,OAAQ,CACJC,WAAY,WACZC,SAAU,OACVC,cAAe,MAEf,2BAA4B,CACxBD,SAAU,UAGd,mDAAoD,CAChDA,SAAU,SAIlBE,cAAe,CACXC,QAAS,SAET,2BAA4B,CACxBA,QAAS,UAGb,mDAAoD,CAChDA,QAAS,WAIjBC,SAAU,CACNC,OAAQ,oBACRC,UAAW,uBACXC,aAAc,OACdb,OAAQ,YAER,UAAW,CACPc,UAAW,aACXC,WAAY,gBAGhB,2BAA4B,CACxBH,UAAW,uBAEX,UAAW,CACPE,UAAW,cACXC,WAAY,kBAKxBC,mBAAoB,GAIpBC,UAAW,CACPlB,MAAO,OACPmB,OAAQ,OACRC,UAAW,QACXN,aAAc,gBACdO,aAAc,qBAGlBC,kBAAmB,CACfZ,QAAS,sBAET,2BAA4B,CACxBA,QAAS,wBAGb,mDAAoD,CAChDA,QAAS,0BAIjBa,MAAO,CACHC,MAAO,UACPlB,WAAY,cACZE,cAAe,MAEf,2BAA4B,CACxBA,cAAe,QACfD,SAAU,UAGd,mDAAoD,CAChDA,SAAU,SACVC,cAAe,UAIvBiB,YAAa,CACTnB,WAAY,aACZkB,MAAO,UACPvB,OAAQ,kBACRO,cAAe,QAEf,2BAA4B,CACxBD,SAAU,QACVN,OAAQ,mBAGZ,mDAAoD,CAChDM,SAAU,QACVC,cAAe,MACfP,OAAQ,mBAKhByB,UAAW,CACPd,OAAQ,oBACRY,MAAO,UACPlB,WAAY,UACZE,cAAe,QACfP,OAAQ,kBAER,UAAW,CACPc,UAAW,cACXY,WAAY,UACZH,MAAO,UACPR,WAAY,kBAGhB,2BAA4B,GAI5B,mDAAoD,CAChDT,SAAU,QACVN,OAAQ,oBAIhB2B,YAAa,CACT5B,MAAO,MACPmB,OAAQ,OACRP,OAAQ,oBACRE,aAAc,OAEd,2BAA4B,CACxBd,MAAO,OAGX,mDAAoD,IAKxD6B,aAAc,CACVC,gBAAiB,UACjBN,MAAO,UACPO,cAAe,OACfzB,WAAY,UACZE,cAAe,QACfP,OAAQ,SAER,UAAW,CACPuB,MAAO,WAGX,2BAA4B,CACxBvB,OAAQ,YAIhB+B,YAAa,CACTC,QAAS,OACTC,SAAU,EACVC,WAAY,YAKL,SAASC,IAEpB,IAAMC,EAAUzC,IAChB,EAA4B0C,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAqCJ,mBAAS,IAA9C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAwBN,mBAAS,IAAjC,mBAAOO,EAAP,KAAaC,EAAb,KAGMC,EAAe,WACjBP,GAAWD,IAmBf,OAPAS,qBAAU,WACNC,OAAOC,SAAS,EAAG,GAEnBC,QAAQC,IAAIX,KACb,CAACA,EAAcE,IAId,qBAAKU,UAAWhB,EAAQvC,KAAxB,SACI,sBAAKuD,UAAWhB,EAAQtC,QAAxB,UAEI,qBAAKsD,UAAWhB,EAAQnC,gBAAxB,SACI,cAACoD,EAAA,EAAD,CAAYD,UAAWhB,EAAQhC,OAAQkD,QAAQ,KAA/C,wBAKJ,cAACC,EAAA,EAAD,CACIC,WAAS,EACTC,QAAQ,eACRL,UAAWhB,EAAQ5B,cAHvB,SAMQjB,EAASmE,KAAI,WAA+CC,GAA/C,IAAGrC,EAAH,EAAGA,MAAOsC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,QAAStC,EAAhC,EAAgCA,YAAhC,OAET,cAAC+B,EAAA,EAAD,CACIQ,MAAI,EAEJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,QAAS,kBAvClB,SAACP,EAAOC,EAAMvC,GAC7BwB,IACAL,EAAgBmB,GAChBjB,EAAekB,GACfhB,EAAQvB,GAmC+B8C,CAAWR,EAAOC,EAAMvC,IAN3C,SAQI,sBAAK8B,UAAWhB,EAAQ1B,SAAxB,UACI,qBAAK0C,UAAWhB,EAAQpB,mBAAxB,SACI,qBAAKoC,UAAWhB,EAAQnB,UAAWoD,IAAKT,EAAOU,IAAI,qBAGvD,sBAAKlB,UAAWhB,EAAQf,kBAAxB,UACI,cAACgC,EAAA,EAAD,CAAYD,UAAWhB,EAAQd,MAAOgC,QAAQ,KAA9C,SACKhC,IAGL,cAAC+B,EAAA,EAAD,CAAYD,UAAWhB,EAAQZ,YAAa8B,QAAQ,QAApD,SACK9B,IAIDsC,EAAQJ,KAAI,SAACa,EAAUC,GAAX,OACR,cAACC,EAAA,EAAD,CAAcrB,UAAWhB,EAAQX,UAAWiD,MAAOH,EAASI,KAAMrB,QAAQ,WAA/DkB,aAtBtBb,QAmCrB,eAACiB,EAAA,EAAD,CACIC,SAAS,KACTC,WAAW,EACXC,KAAMzC,EACN0C,QAASlC,EAJb,UAMI,cAACmC,EAAA,EAAD,UACI,sBAAK7B,UAAWhB,EAAQL,YAAxB,UACI,qBAAKmD,MAAO,CAAEjD,SAAU,GAAxB,SACI,sBAAMqB,QAAQ,KAAK4B,MAAO,CAAE7E,WAAY,YAAxC,SACKuC,MAGT,8BACI,cAACuC,EAAA,EAAD,CAAYhB,QAASrB,EAAcsC,KAAK,QAAxC,SACI,cAAC,IAAD,CAAWF,MAAO,CAAE3D,MAAO,sBAM3C,cAAC8D,EAAA,EAAD,CAAeH,MAAO,CAAE/E,UAAW,UAAnC,SACI,qBAAKkE,IAAK7B,EAAcY,UAAWhB,EAAQT,YAAa2C,IAAI,eAGhE,cAACgB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CACInC,UAAWhB,EAAQR,aACnB4D,KAAM9C,EACNY,QAAQ,YAHZ","file":"static/js/8.01150ad7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/covidWeb.1029808f.png\";","export default __webpack_public_path__ + \"static/media/todoList.83d8d791.png\";","export default __webpack_public_path__ + \"static/media/weatherWeb.a2f602ed.png\";","import covidWeb from '../assets/images/projects/covidWeb.png';\r\nimport todoList from '../assets/images/projects/todoList.png';\r\nimport weatherWeb from '../assets/images/projects/weatherWeb.png';\r\nimport PokemonApp from '../assets/images/projects/pokemonApp.png';\r\n\r\nexport const gridData = [\r\n    {\r\n        'title': 'Covid Vision',\r\n        'image': covidWeb,\r\n        'link': 'https://covid-vision.netlify.app/',\r\n        'description': 'Web App developed to retrieve Covid-19 cases information',\r\n        'program': [\r\n            { 'code': 'React.Js', },\r\n            { 'code': 'Material-Ui', },\r\n        ],\r\n    },\r\n    {\r\n        'title': 'Pokemon Web App',\r\n        'image': PokemonApp,\r\n        'link': 'https://pokemon-app-mozzie.netlify.app/',\r\n        'description': 'Web App that retrieve data from Pokemon API and its information',\r\n        'program': [\r\n            { 'code': 'React.Js', },\r\n            { 'code': 'Material-Ui', },\r\n        ],\r\n    },\r\n    {\r\n        'title': 'Weather App',\r\n        'image': weatherWeb,\r\n        'link': 'https://weather-app-mozzie.netlify.app',\r\n        'description': 'A weather App built using API calling functions.',\r\n        'program': [\r\n            { 'code': 'React.Js', },\r\n            { 'code': 'Material-Ui', },\r\n            { 'code': 'CSS', }\r\n        ],\r\n    },\r\n    {\r\n        'title': 'Todo List App',\r\n        'image': todoList,\r\n        'link': 'https://todo-list-beermossy.netlify.app',\r\n        'description': 'Basic Todo App, that has Add, Remove and Complete functionalities.',\r\n        'program': [\r\n            { 'code': 'React.Js', },\r\n            { 'code': 'CSS', }\r\n        ],\r\n    },\r\n];\r\n","export default __webpack_public_path__ + \"static/media/pokemonApp.ce6f0ee1.png\";","import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid, Chip, Dialog, DialogTitle, DialogContent, DialogActions, Button, IconButton, } from '@material-ui/core';\r\nimport { gridData } from '../../middleware/ProjectData.js';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n\r\n    },\r\n\r\n    wrapper: {\r\n        width: '85%',\r\n        margin: 'auto',\r\n\r\n        '@media(max-width: 600px)': {\r\n            width: '90%',\r\n        },\r\n        '@media(min-width: 601px) and (max-width: 1024px)': {\r\n            width: '90%',\r\n        },\r\n    },\r\n\r\n    headerContainer: {\r\n        paddingTop: '8rem',\r\n        textAlign: 'center',\r\n    },\r\n\r\n    header: {\r\n        fontFamily: 'Oxy-Bold',\r\n        fontSize: '4rem',\r\n        letterSpacing: '2px',\r\n\r\n        '@media(max-width: 600px)': {\r\n            fontSize: '2.5rem',\r\n        },\r\n\r\n        '@media(min-width: 601px) and (max-width: 1024px)': {\r\n            fontSize: '2rem',\r\n        },\r\n    },\r\n\r\n    gridContainer: {\r\n        padding: '5rem 0',\r\n\r\n        '@media(max-width: 600px)': {\r\n            padding: '2rem 0',\r\n        },\r\n\r\n        '@media(min-width: 601px) and (max-width: 1024px)': {\r\n            padding: '3rem 0',\r\n        },\r\n    },\r\n\r\n    gridItem: {\r\n        border: '1px solid #C6C6C6',\r\n        boxShadow: '5px 5px 20px #DCDBDB',\r\n        borderRadius: '1rem',\r\n        margin: '2rem 1rem',\r\n\r\n        '&:hover': {\r\n            transform: 'scale(1.1)',\r\n            transition: '.4s ease all',\r\n        },\r\n\r\n        '@media(max-width: 600px)': {\r\n            boxShadow: '2px 3px 10px #DCDBDB',\r\n\r\n            '&:hover': {\r\n                transform: 'scale(1.05)',\r\n                transition: '.4s ease all',\r\n            },\r\n        },\r\n    },\r\n\r\n    gridImageContainer: {\r\n\r\n    },\r\n\r\n    gridImage: {\r\n        width: '100%',\r\n        height: '100%',\r\n        objectFit: 'cover',\r\n        borderRadius: '1rem 1rem 0 0',\r\n        borderBottom: '1px solid #C6C6C6',\r\n    },\r\n\r\n    gridTextContainer: {\r\n        padding: '2rem 1rem 1rem 1rem',\r\n\r\n        '@media(max-width: 600px)': {\r\n            padding: '.8rem 1rem 1rem 1rem',\r\n        },\r\n\r\n        '@media(min-width: 601px) and (max-width: 1024px)': {\r\n            padding: '0.5rem 1rem 1rem 1rem',\r\n        },\r\n    },\r\n\r\n    title: {\r\n        color: '#7619FF',\r\n        fontFamily: 'Nunito-Bold',\r\n        letterSpacing: '1px',\r\n\r\n        '@media(max-width: 600px)': {\r\n            letterSpacing: '1.5px',\r\n            fontSize: '1.4rem',\r\n        },\r\n\r\n        '@media(min-width: 601px) and (max-width: 1024px)': {\r\n            fontSize: '1.1rem',\r\n            letterSpacing: '1.5px'\r\n        },\r\n    },\r\n\r\n    description: {\r\n        fontFamily: 'Nunito-Reg',\r\n        color: '#343434',\r\n        margin: '1rem 0 1.5rem 0',\r\n        letterSpacing: '0.6px',\r\n\r\n        '@media(max-width: 600px)': {\r\n            fontSize: '.9rem',\r\n            margin: '1rem 0 2.5rem 0',\r\n        },\r\n\r\n        '@media(min-width: 601px) and (max-width: 1024px)': {\r\n            fontSize: '.8rem',\r\n            letterSpacing: '1px',\r\n            margin: '.8rem 0 1rem 0',\r\n\r\n        },\r\n    },\r\n\r\n    chipTitle: {\r\n        border: '1px solid #7619FF',\r\n        color: '#7619FF',\r\n        fontFamily: 'Oxy-Reg',\r\n        letterSpacing: '0.6px',\r\n        margin: '.3rem .4rem 0 0',\r\n\r\n        '&:hover': {\r\n            transform: 'scale(1.05)',\r\n            background: '#AB72FF',\r\n            color: '#fcfcfc',\r\n            transition: 'all .3s linear',\r\n        },\r\n\r\n        '@media(max-width: 600px)': {\r\n\r\n        },\r\n\r\n        '@media(min-width: 601px) and (max-width: 1024px)': {\r\n            fontSize: '.7rem',\r\n            margin: '.3rem .2rem 0 0'\r\n        },\r\n    },\r\n\r\n    dialogImage: {\r\n        width: '80%',\r\n        height: '100%',\r\n        border: '1px solid #9c9c9c',\r\n        borderRadius: '1rem',\r\n\r\n        '@media(max-width: 600px)': {\r\n            width: '90%',\r\n        },\r\n\r\n        '@media(min-width: 601px) and (max-width: 1024px)': {\r\n\r\n        },\r\n    },\r\n\r\n    dialogButton: {\r\n        backgroundColor: '#7619FF',\r\n        color: '#fcfcfc',\r\n        textTransform: 'none',\r\n        fontFamily: 'Oxy-Reg',\r\n        letterSpacing: '0.6px',\r\n        margin: '1rem 0',\r\n\r\n        '&:hover': {\r\n            color: '#050505',\r\n        },\r\n\r\n        '@media(max-width: 600px)': {\r\n            margin: '.5rem 0',\r\n        },\r\n    },\r\n\r\n    dialogTitle: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\n\r\nexport default function Project() {\r\n\r\n    const classes = useStyles();\r\n    const [dialog, setDialog] = useState(false);\r\n    const [pictureIndex, setPictureIndex] = useState([])\r\n    const [dialogLink, setDialongLink] = useState('');\r\n    const [name, setName] = useState('');\r\n\r\n\r\n    const toggleDialog = () => {\r\n        setDialog(!dialog);\r\n    };\r\n\r\n\r\n    const dialogData = (image, link, title) => {\r\n        toggleDialog();\r\n        setPictureIndex(image);\r\n        setDialongLink(link);\r\n        setName(title);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        console.log(pictureIndex);\r\n    }, [pictureIndex, dialogLink])\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.wrapper}>\r\n\r\n                <div className={classes.headerContainer}>\r\n                    <Typography className={classes.header} variant='h1'>\r\n                        PROJECTS\r\n                    </Typography>\r\n                </div>\r\n\r\n                <Grid\r\n                    container\r\n                    justify='space-evenly'\r\n                    className={classes.gridContainer}\r\n                >\r\n                    {\r\n                        gridData.map(({ title, image, link, program, description }, index) =>\r\n\r\n                            <Grid\r\n                                item\r\n                                key={index}\r\n                                xs={12}\r\n                                sm={6}\r\n                                md={4}\r\n                                onClick={() => dialogData(image, link, title)}\r\n                            >\r\n                                <div className={classes.gridItem}>\r\n                                    <div className={classes.gridImageContainer}>\r\n                                        <img className={classes.gridImage} src={image} alt='Project Images' />\r\n                                    </div>\r\n\r\n                                    <div className={classes.gridTextContainer}>\r\n                                        <Typography className={classes.title} variant='h6'>\r\n                                            {title}\r\n                                        </Typography>\r\n\r\n                                        <Typography className={classes.description} variant='body2'>\r\n                                            {description}\r\n                                        </Typography>\r\n\r\n                                        {\r\n                                            program.map((programs, i) =>\r\n                                                <Chip key={i} className={classes.chipTitle} label={programs.code} variant='oulined' />\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </Grid>\r\n\r\n                        )\r\n                    }\r\n\r\n                </Grid>\r\n\r\n                <Dialog\r\n                    maxWidth='md'\r\n                    fullWidth={true}\r\n                    open={dialog}\r\n                    onClose={toggleDialog}\r\n                >\r\n                    <DialogTitle >\r\n                        <div className={classes.dialogTitle}>\r\n                            <div style={{ flexGrow: 1, }}>\r\n                                <span variant='h6' style={{ fontFamily: 'Oxy-Bold', }}>\r\n                                    {name}\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <IconButton onClick={toggleDialog} size='small'>\r\n                                    <CloseIcon style={{ color: '#636363' }} />\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent style={{ textAlign: 'center' }}>\r\n                        <img src={pictureIndex} className={classes.dialogImage} alt='Projects' />\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button\r\n                            className={classes.dialogButton}\r\n                            href={dialogLink}\r\n                            variant='contained'\r\n                        >\r\n                            Explore More\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}